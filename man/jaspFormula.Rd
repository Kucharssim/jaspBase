% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/formula.R
\name{jaspFormula}
\alias{jaspFormula}
\title{JASP Formulas}
\usage{
jaspFormula(formula, data)
}
\arguments{
\item{formula}{A formula object.}

\item{data}{A data frame.}
}
\value{
A list of class "jaspFormula" is returned, with the following elements:
\itemize{
\item{\code{formula}}{ The original formula object.}
\item{\code{lhs}}{ A vector of column names included on the left hand-side of the formula.}
\item{\code{rhs}}{ A List of \code{fixed} and \code{random} terms that appear on the right hand-side of the formula.}
}
The elements of the \code{fixed} terms are:
\itemize{
\item{\code{vars}}{ A character vector of model terms.}
\item{\code{intercept}}{ Logical. If TRUE, intercept is included, if FALSE, intercept it not included.}
}
The \code{random} is itself a list of length equal to the number of random factors.
Each element is a list that contains the same elements as \code{fixed}, plus the following elements:
\itemize{
\item{\code{correlated}}{ Logical. Are the terms correlated?}
\item{\code{group}}{ The name of the random group factor.}
}
}
\description{
This function provides support to \link[stats:formula]{stats::formula} in R syntax. It is used to internally parse formula objects.
This function is not intended for direct use.
}
\details{
The formulas in JASP follow the same rules as in \link[stats:formula]{stats::formula}, but have some functionality removed.
Specifically, it is not possible to use \link[stats:offset]{stats::offset} in a formula. Analyses that allow including \link[stats:offset]{stats::offset} in the model have specialized argument for that purpose.
It is also not possible to use variable transformations in a formula. Thus, instead of transforming variables using formulas, transform the variables before entering them in the analysis.

For specification of the random effects, \link[lme4:lme4-package]{lme4::lme4-package} syntax is used. There is a difference in how JASP parses whether or not are random effects correlated:
Under each random grouping factor, all terms can be either correlated or uncorrelated, but it is not possible to correlate some random effects but hold some random effects uncorrelated.
}
\examples{
# standard lm-style formulas with interaction
jaspFormula(mpg ~ cyl * disp, mtcars)

# exclude intercept
jaspFormula(mpg ~  0 + cyl * disp, mtcars)
jaspFormula(mpg ~ -1 + cyl * disp, mtcars)

# combine multiple columns on the lhs and multiple columns on the rhs (without interaction)
jaspFormula(cbind(mpg, disp) ~ cyl + gear, mtcars)

# non-syntactic column names
df <- data.frame(x = rlnorm(10))
df[["log(x)"]] <- log(df$x)
df[["a b ~ y <- gamma("]] <- rnorm(10)
jaspFormula(`a b ~ y <- gamma(` ~ `log(x)`, df)

# lme4 syntax for mixed models
jaspFormula(mpg ~ disp*hp + (0 + disp + hp | cyl) + (1 | carb), mtcars)

# uncorrelated intercept and slopes
# the following two lines give the same result
jaspFormula(mpg ~ disp + (1 + disp + hp || cyl), mtcars)
jaspFormula(mpg ~ disp + (1 | cyl) + (disp | cyl) + (hp | cyl), mtcars)


# THESE EXAMPLES SHOW HOW JASP FORMULA DEVIATES FROM THE STANDARD BEHAVIOR OF FORMULAS

# It is not possible to use variable transformations in the formula
jaspFormula(mpg + disp ~ cyl, mtcars)
jaspFormula(mpg ~ exp(disp),  mtcars)

# It is not possible to use `offset`
jaspFormula(mpg ~ offset(disp) + cyl, mtcars)

# It is not possible to correlate random effects of `disp` and `hp` but hold the intercept uncorrelated.
# in this case all random effects are assumed uncorrelated contrary to the typical use in lme4.
jaspFormula(mpg ~ disp + (1 | cyl) + (0 + disp + hp | cyl), mtcars)
}
